// Aa code produced by llvm2aa (version 2.0)
$storage num3:$uint<64>
$storage num:$array [2] $of $array [2] $of $array [2] $of $uint<64>
$module [num_initializer_in_globalsx_xbc] $in () $out () $is {
num[0][0][0] := _b0000000000000000000000000000000000000000000000000000000000010100
num[0][0][1] := _b0000000000000000000000000000000000000000000000000000000000001010
num[0][1][0] := _b0000000000000000000000000000000000000000000000000000000000010100
num[0][1][1] := _b0000000000000000000000000000000000000000000000000000000000001010
num[1][0][0] := _b0000000000000000000000000000000000000000000000000000000000010100
num[1][0][1] := _b0000000000000000000000000000000000000000000000000000000000001010
num[1][1][0] := _b0000000000000000000000000000000000000000000000000000000000010100
num[1][1][1] := _b0000000000000000000000000000000000000000000000000000000000001010
$attribute nooptimize 
}
$module [globalsx_xbc_storage_initializer_] $in () $out () $is {
$parallelblock [pb] { 
$call num_initializer_in_globalsx_xbc () () 
}
$attribute initializer
}
$module [type_conversion] 
 $in (xx_x1 : $uint<64> )
 $out (ret_val__ : $uint<64>)
 $is 
{
$branchblock [body] {
//begin: basic-block vars
// load 
xx_x4 := num3
xx_x6 := (xx_x4 + xx_x1)
num3 := xx_x6
xx_x10 := (xx_x1 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
xx_x14 := @(num[xx_x10][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
->(xx_x14) := xx_x6
ret_val__ := (xx_x6 / ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
$place [return__]
$merge return__ $endmerge
}
}
