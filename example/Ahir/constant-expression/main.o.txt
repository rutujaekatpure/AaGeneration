; ModuleID = 'main.o'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

@g = common global [10 x i32] zeroinitializer, align 16

define void @cpy(i32* %a) nounwind {
entry:
  %a.addr = alloca i32*, align 8
  store i32* %a, i32** %a.addr, align 8
  %tmp = load i32** %a.addr, align 8
  %tmp1 = load i32* %tmp
  %tmp2 = load i32** %a.addr, align 8
  %add.ptr = getelementptr inbounds i32* %tmp2, i64 1
  store i32 %tmp1, i32* %add.ptr
  ret void
}

define i32 @main(i32 %a) nounwind {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i32, align 4
  store i32 0, i32* %retval
  store i32 %a, i32* %a.addr, align 4
  %0 = getelementptr [10 x i32]* @g, i32 0, i64 0
  call void @cpy(i32* %0)
  %1 = getelementptr [10 x i32]* @g, i32 0, i64 1
  %tmp = load i32* %1
  ret i32 %tmp
}
